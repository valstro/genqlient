// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package test

import (
	"github.com/Khan/genqlient/graphql"
)

type StructInput struct {
	Field string `js:"field" json:"field"`
}

// GetField returns StructInput.Field, and is useful for accessing the field via an interface.
func (v *StructInput) GetField() string { return v.Field }

// UseStructReferenceResponse is returned by UseStructReference on success.
type UseStructReferenceResponse struct {
	UseStructReferencesInput bool `js:"useStructReferencesInput" json:"useStructReferencesInput"`
}

// GetUseStructReferencesInput returns UseStructReferenceResponse.UseStructReferencesInput, and is useful for accessing the field via an interface.
func (v *UseStructReferenceResponse) GetUseStructReferencesInput() bool {
	return v.UseStructReferencesInput
}

type UseStructReferencesInput struct {
	Struct         StructInput   `js:"struct" json:"struct"`
	NullableStruct StructInput   `js:"nullableStruct" json:"nullableStruct"`
	List           []StructInput `js:"list" json:"list"`
	ListOfNullable []StructInput `js:"listOfNullable" json:"listOfNullable"`
	NullableList   []StructInput `js:"nullableList" json:"nullableList"`
}

// GetStruct returns UseStructReferencesInput.Struct, and is useful for accessing the field via an interface.
func (v *UseStructReferencesInput) GetStruct() StructInput { return v.Struct }

// GetNullableStruct returns UseStructReferencesInput.NullableStruct, and is useful for accessing the field via an interface.
func (v *UseStructReferencesInput) GetNullableStruct() StructInput { return v.NullableStruct }

// GetList returns UseStructReferencesInput.List, and is useful for accessing the field via an interface.
func (v *UseStructReferencesInput) GetList() []StructInput { return v.List }

// GetListOfNullable returns UseStructReferencesInput.ListOfNullable, and is useful for accessing the field via an interface.
func (v *UseStructReferencesInput) GetListOfNullable() []StructInput { return v.ListOfNullable }

// GetNullableList returns UseStructReferencesInput.NullableList, and is useful for accessing the field via an interface.
func (v *UseStructReferencesInput) GetNullableList() []StructInput { return v.NullableList }

// __UseStructReferenceInput is used internally by genqlient
type __UseStructReferenceInput struct {
	Input UseStructReferencesInput `js:"input" json:"input"`
}

// GetInput returns __UseStructReferenceInput.Input, and is useful for accessing the field via an interface.
func (v *__UseStructReferenceInput) GetInput() UseStructReferencesInput { return v.Input }

// The query executed by UseStructReference.
const UseStructReference_Operation = `
query UseStructReference ($input: UseStructReferencesInput!) {
	useStructReferencesInput(input: $input)
}
`

// https://github.com/Khan/genqlient/issues/342
func UseStructReference(
	client_ graphql.Client,
	input UseStructReferencesInput,
) (data_ *UseStructReferenceResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "UseStructReference",
		Query:  UseStructReference_Operation,
		Variables: &__UseStructReferenceInput{
			Input: input,
		},
	}

	data_ = &UseStructReferenceResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		nil,
		req_,
		resp_,
	)

	return data_, err_
}

